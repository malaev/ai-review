import 'dotenv/config';
import { execSync } from 'child_process';
import * as fs from 'fs';
import * as path from 'path';

// –≠–º—É–ª—è—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è GitHub Actions
process.env.GITHUB_REPOSITORY = process.env.TEST_REPOSITORY || 'owner/repo';
process.env.GITHUB_EVENT_NAME = 'pull_request';
process.env.PR_NUMBER = process.env.TEST_PR_NUMBER || '1';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ PR
async function createTestPR() {
  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –≤–µ—Ç–∫—É
  execSync('git checkout -b test-pr-branch');

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
  const testFile = 'src/test-component.tsx';
  const testCode = `
import React, { useState, useEffect } from 'react';

interface Props {
  name: string;
}

export const TestComponent: React.FC<Props> = ({ name }) => {
  const [count, setCount] = useState(0);
  
  useEffect(() => {
    // –ù–∞–º–µ—Ä–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const timer = setInterval(() => {
      setCount(c => c + 1);
    }, 1000);
  }, []); // –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ—á–∏—Å—Ç–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∞

  const handleClick = () => {
    // –¢–µ—Å—Ç–æ–≤–∞—è —É—è–∑–≤–∏–º–æ—Å—Ç—å
    eval(name);
  };

  return (
    <div onClick={handleClick}>
      {name}: {count}
    </div>
  );
};
`;

  fs.writeFileSync(testFile, testCode);

  // –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
  execSync('git add .');
  execSync('git commit -m "test: Add test component for review"');

  // –ü—É—à–∏–º –≤–µ—Ç–∫—É (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
  if (process.env.PUSH_BRANCH === 'true') {
    execSync('git push origin test-pr-branch');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–º—É–ª—è—Ü–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
async function emulateComment() {
  process.env.GITHUB_EVENT_NAME = 'issue_comment';
  process.env.COMMENT_ID = '12345';
  process.env.REPLY_TO_ID = '12344';

  const testComment = {
    body: '–ü–æ—á–µ–º—É –∑–¥–µ—Å—å –Ω–µ—Ç cleanup –≤ useEffect?',
    user: {
      login: 'test-user'
    },
    issue_url: `https://api.github.com/repos/${process.env.GITHUB_REPOSITORY}/issues/${process.env.PR_NUMBER}`
  };

  // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å —Å–æ–±—ã—Ç–∏–µ–º
  const eventPath = path.join(__dirname, 'test-event.json');
  fs.writeFileSync(eventPath, JSON.stringify({
    action: 'created',
    comment: testComment,
    issue: {
      pull_request: {}
    }
  }));

  process.env.GITHUB_EVENT_PATH = eventPath;
}

async function main() {
  try {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π PR
    await createTestPR();
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π PR —Å–æ–∑–¥–∞–Ω');

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–≤—å—é –∫–æ–¥–∞
    console.log('üîç –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–≤—å—é –∫–æ–¥–∞...');
    execSync('npm run review', { stdio: 'inherit' });

    // –≠–º—É–ª–∏—Ä—É–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏ –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–µ–≥–æ
    console.log('üí¨ –≠–º—É–ª–∏—Ä—É–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π...');
    await emulateComment();
    execSync('npm run review', { stdio: 'inherit' });

    // –û—á–∏—Å—Ç–∫–∞
    execSync('git checkout main');
    execSync('git branch -D test-pr-branch');
    console.log('üßπ –¢–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –æ—á–∏—â–µ–Ω–æ');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    process.exit(1);
  }
}

main(); 